// <auto-generated />
using System;
using CarAuctionManagementSystem.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarAuctionManagementSystem.Persistence.Migrations
{
    [DbContext(typeof(CarAuctionManagementSystemDbContext))]
    partial class CarAuctionManagementSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Auctions.Auction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("created_at");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("updated_at");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint")
                        .HasColumnName("vehicle_id");

                    b.HasKey("Id")
                        .HasName("pk_vehicle_auction");

                    b.HasIndex("VehicleId")
                        .HasDatabaseName("ix_vehicle_auction_vehicle_id");

                    b.ToTable("vehicle_auction", (string)null);
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Bids.Bid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AuctionId")
                        .HasColumnType("bigint")
                        .HasColumnName("auction_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("updated_at");

                    b.Property<string>("UserIdentifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_identifier");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_auction_bid");

                    b.HasIndex("AuctionId")
                        .HasDatabaseName("ix_auction_bid_auction_id");

                    b.ToTable("auction_bid", (string)null);
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Vehicles.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("created_at");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identifier");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("model");

                    b.Property<double>("StartingBid")
                        .HasColumnType("double precision")
                        .HasColumnName("starting_bid");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("updated_at");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.Property<int>("type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_vehicle");

                    b.HasIndex("Identifier")
                        .IsUnique()
                        .HasDatabaseName("ix_vehicle_identifier");

                    b.ToTable("vehicle", (string)null);

                    b.HasDiscriminator<int>("type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Vehicles.Hatchback", b =>
                {
                    b.HasBaseType("CarAuctionManagementSystem.Domain.Vehicles.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_doors");

                    b.ToTable("vehicle", null, t =>
                        {
                            t.Property("NumberOfDoors")
                                .HasColumnName("hatchback_number_of_doors");
                        });

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Vehicles.Sedan", b =>
                {
                    b.HasBaseType("CarAuctionManagementSystem.Domain.Vehicles.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_doors");

                    b.ToTable("vehicle", (string)null);

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Vehicles.Suv", b =>
                {
                    b.HasBaseType("CarAuctionManagementSystem.Domain.Vehicles.Vehicle");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_seats");

                    b.ToTable("vehicle", (string)null);

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Vehicles.Truck", b =>
                {
                    b.HasBaseType("CarAuctionManagementSystem.Domain.Vehicles.Vehicle");

                    b.Property<double>("LoadCapacity")
                        .HasColumnType("double precision")
                        .HasColumnName("load_capacity");

                    b.ToTable("vehicle", (string)null);

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Auctions.Auction", b =>
                {
                    b.HasOne("CarAuctionManagementSystem.Domain.Vehicles.Vehicle", "Vehicle")
                        .WithMany("Auctions")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vehicle_auction_vehicle_vehicle_id");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Bids.Bid", b =>
                {
                    b.HasOne("CarAuctionManagementSystem.Domain.Auctions.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_auction_bid_vehicle_auction_auction_id");

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Auctions.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("CarAuctionManagementSystem.Domain.Vehicles.Vehicle", b =>
                {
                    b.Navigation("Auctions");
                });
#pragma warning restore 612, 618
        }
    }
}
